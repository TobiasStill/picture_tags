<?php

/**
 * PictureTag
 * PHP version 7.2
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * This is a sample Tagcloud server for images.
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */
namespace OpenAPIServer\Api;

use Psr\Container\ContainerInterface;
use Psr\Http\Message\ServerRequestInterface;
use Psr\Http\Message\ResponseInterface;
use Slim\Exception\HttpNotImplementedException;

/**
 * AbstractSelectionApi Class Doc Comment
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
abstract class AbstractSelectionApi
{

    /**
     * @var ContainerInterface|null Slim app container instance
     */
    protected $container;

    /**
     * Route Controller constructor receives container
     *
     * @param ContainerInterface|null $container Slim app container instance
     */
    public function __construct(ContainerInterface $container = null)
    {
        $this->container = $container;
    }


    /**
     * POST addTagSelection
     * Summary: Add a new tag-selection to the tagcloud
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function addImageSelection(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $body = $request->getParsedBody();
        $message = "How about implementing addTagSelection as a POST method in OpenAPIServer\Api\SelectionApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * DELETE deleteTagSelection
     * Summary: Deletes a tag-selection
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function deleteImageSelection(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $id = $args['id'];
        $message = "How about implementing deleteTagSelection as a DELETE method in OpenAPIServer\Api\SelectionApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getTagSelectionByTagName
     * Summary: get ImageSelection by name
     * Notes: Returns a single TagSelection
     * Output-Formats: [application/json, application/xml]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getImageSelectionById(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $id = $args['id'];
        $message = "How about implementing getTagSelectionByTagName as a GET method in OpenAPIServer\Api\SelectionApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * PUT updateTagSelection
     * Summary: Update an existing tag-selection
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function updateImageSelection(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $body = $request->getParsedBody();
        $message = "How about implementing updateTagSelection as a PUT method in OpenAPIServer\Api\SelectionApi class?";
        throw new HttpNotImplementedException($request, $message);
    }
}
