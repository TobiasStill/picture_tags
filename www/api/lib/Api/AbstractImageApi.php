<?php

/**
 * PictureTag
 * PHP version 7.2
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * This is a sample Tagcloud server for images.
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */
namespace OpenAPIServer\Api;

use Psr\Container\ContainerInterface;
use Psr\Http\Message\ServerRequestInterface;
use Psr\Http\Message\ResponseInterface;
use Slim\Exception\HttpNotImplementedException;

/**
 * AbstractImageApi Class Doc Comment
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
abstract class AbstractImageApi
{

    /**
     * @var ContainerInterface|null Slim app container instance
     */
    protected $container;

    /**
     * Route Controller constructor receives container
     *
     * @param ContainerInterface|null $container Slim app container instance
     */
    public function __construct(ContainerInterface $container = null)
    {
        $this->container = $container;
    }


    /**
     * GET findImagesByTag
     * Summary: Finds Images by tag
     * Notes: Muliple tags can be provided with comma separated strings.
     * Output-Formats: [application/json, application/xml]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function findImagesByTag(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $queryParams = $request->getQueryParams();
        $tags = (key_exists('tags', $queryParams)) ? $queryParams['tags'] : null;
        $message = "How about implementing findImagesByTag as a GET method in OpenAPIServer\Api\ImageApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getImageInventory
     * Summary: Returns images
     * Output-Formats: [application/json, application/xml]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getImageInventory(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $message = "How about implementing getImageInventory as a GET method in OpenAPIServer\Api\ImageApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getSrcSet
     * Summary: Finds Images by tag
     * Notes: Muliple tags can be provided with comma separated strings.
     * Output-Formats: [application/json, application/xml]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getSrcSet(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $name = $args['name'];
        $message = "How about implementing getSrcSet as a GET method in OpenAPIServer\Api\ImageApi class?";
        throw new HttpNotImplementedException($request, $message);
    }
}
