swagger: '2.0'
info:
  description: |
    This is a sample Tagcloud server for images.
  version: 1.0.0
  title: PictureTag
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: andreasdiefenbach.com
basePath: /api
tags:
  - name: tag
    description: a Tag
  - name: image
    description: an Image
schemes:
  - http
paths:
  /tag:
    post:
      tags:
        - tag
      summary: Add a new tag to the tagcloud
      operationId: addTag
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Tag object that needs to be added to the cloud
          required: true
          schema:
            $ref: '#/definitions/Tag'
      responses:
        405:
          description: Invalid input
    put:
      tags:
        - tag
      summary: Update an existing ta
      operationId: updateTag
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Tag object that needs to be added to the cloud
          required: true
          schema:
            $ref: '#/definitions/Tag'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Tag not found
        405:
          description: Validation exception
  /tag/findByAuthor:
    get:
      tags:
        - tag
      summary: Finds Tags by author
      description: Multiple authors can be provided with comma separated strings
      operationId: findTagsByAuthors
      produces:
        - application/json
        - application/xml
      parameters:
        - name: author
          in: query
          description: Author values that need to be considered for filter
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Tag'
        400:
          description: Invalid status value
  /tag/findByImage:
    get:
      tags:
        - tag
      summary: Finds Tags by image
      description: Muliple images can be provided with comma separated strings. Use\
        \ 1, 2, 3 for testing.
      operationId: findTagsByImage
      produces:
        - application/json
        - application/xml
      parameters:
        - name: images
          in: query
          description: images to filter by
          required: true
          type: array
          items:
            type: integer
          collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Tag'
        400:
          description: Invalid image value
  /tag/{tagName}:
    get:
      tags:
        - tag
      summary: Find Tag by TangName
      description: Returns a single Tag
      operationId: getTagByTagName
      produces:
        - application/json
        - application/xml
      parameters:
        - name: tagName
          in: path
          description: Name of Tag to return
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Tag'
        400:
          description: Invalid name supplied
        404:
          description: Tag not found
    delete:
      tags:
        - tag
      summary: Deletes a tag
      operationId: deleteTag
      produces:
        - application/json
        - application/xml
      parameters:
        - name: tagName
          in: path
          description: Tag name to delete
          required: true
          type: string
      responses:
        400:
          description: Invalid name supplied
        404:
          description: Tag not found
  /image/{tagName}:
    get:
      tags:
        - image
      summary: Find Images by TangName
      description: Returns tagged Images
      operationId: getImagesByTagName
      produces:
        - application/json
        - application/xml
      parameters:
        - name: tagName
          in: path
          description: Name of Tag
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Image'
        400:
          description: Invalid name supplied
        404:
          description: Tag not found
  /image/{id}/next:
    get:
      tags:
        - image
      summary: Find next image
      description: Returns next Image
      operationId: getNextImage
      produces:
        - application/json
        - application/xml
      parameters:
        - name: id
          in: path
          description: Id of current Image
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Image'
        400:
          description: Invalid id supplied
        404:
          description: No image found
  /image/{id}/previous:
    get:
      tags:
        - image
      summary: Find previous image
      description: Returns previous Image
      operationId: getPreviousImage
      produces:
        - application/json
        - application/xml
      parameters:
        - name: id
          in: path
          description: Id of current Image
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Image'
        400:
          description: Invalid id supplied
        404:
          description: No image found
  /tags:
    get:
      tags:
        - tag
      summary: Returns Tags
      operationId: getInventory
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Tag'
        400:
          description: Invalid Request
definitions:
  Tag:
    type: object
    required:
      - name
      - originalImage
      - author
      - date
      - notes
    properties:
      originalImageId:
        type: integer
        format: int32
      imageIds:
        type: array
        items:
          type: integer
          format: int32
      name:
        type: string
      author:
        type: string
      notes:
        type: array
        items:
          $ref: '#/definitions/Note'
      date:
        type: string
        format: date
    xml:
      name: Tag
  Image:
    type: object
    required:
      - id
      - src
    properties:
      id:
        type: integer
        format: int32
      src:
        type: string
  Note:
    type: object
    required:
      - author
      - note
      - date
    properties:
      author:
        type: string
      note:
        type: string
      date:
        type: string
        format: date
    xml:
      name: Tag
