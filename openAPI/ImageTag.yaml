swagger: '2.0'
info:
  description: |
    This is a sample Tagcloud server for images.
  version: 1.0.0
  title: PictureTag
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: picture-tag.com
basePath: /api
tags:
  - name: tag
    description: a tag
  - name: image
    description: an image
  - name: selection
    description: a selection of images
schemes:
  - http
paths:
  /tag-list:
    get:
      tags:
        - tag
      summary: Lists availlable Tags
      operationId: getTagListing
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              type: string
        400:
          description: Invalid Request
  /tag:
    post:
      tags:
        - tag
      summary: Add a new tag to the tagcloud
      operationId: addTag
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Tag object that needs to be added to the cloud
          required: true
          schema:
            $ref: '#/definitions/Tag'
      responses:
        405:
          description: Invalid input
    put:
      tags:
        - tag
      summary: Update an existing tag
      operationId: updateTag
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Tag object that needs to be added to the cloud
          required: true
          schema:
            $ref: '#/definitions/Tag'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Tag not found
        405:
          description: Validation exception
  /tag/byAuthor/{author}:
    get:
      tags:
        - tag
      summary: Finds Tags by author
      operationId: findTagsByAuthor
      produces:
        - application/json
        - application/xml
      parameters:
        - name: author
          in: path
          description: Author
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Tag'
        400:
          description: Invalid status value
  /tag/{name}:
    get:
      tags:
        - tag
      summary: Find Tag by TangName
      description: Returns a single Tag
      operationId: getTagByTagName
      produces:
        - application/json
        - application/xml
      parameters:
        - name: name
          in: path
          description: Name of Tag to return
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Tag'
        400:
          description: Invalid name supplied
        404:
          description: Tag not found
    delete:
      tags:
        - tag
      summary: Deletes a tag
      operationId: deleteTag
      produces:
        - application/json
        - application/xml
      parameters:
        - name: name
          in: path
          description: Tag name to delete
          required: true
          type: string
      responses:
        400:
          description: Invalid name supplied
        404:
          description: Tag not found
  /selection:
    post:
      tags:
        - selection
      summary: Add a new tag-selection to the tagcloud
      operationId: addImageSelection
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: TagSelection object that needs to be added to the cloud
          required: true
          schema:
            $ref: '#/definitions/ImageSelection'
      responses:
        405:
          description: Invalid input
    put:
      tags:
        - selection
      summary: Update an existing tag-selection
      operationId: updateImageSelection
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Tag object that needs to be added to the cloud
          required: true
          schema:
            $ref: '#/definitions/ImageSelection'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Tag not found
        405:
          description: Validation exception
  /selection/{id}:
    get:
      tags:
        - selection
      summary: get ImageSelection by name
      description: Returns a single TagSelection
      operationId: getImageSelectionById
      produces:
        - application/json
        - application/xml
      parameters:
        - name: id
          in: path
          description: Name of Tag to return selection
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ImageSelection'
        400:
          description: Invalid name supplied
        404:
          description: Tag not found
    delete:
      tags:
        - selection
      summary: Deletes a tag-selection
      operationId: deleteImageSelection
      produces:
        - application/json
        - application/xml
      parameters:
        - name: id
          in: path
          description: Tag name to delete
          required: true
          type: string
      responses:
        400:
          description: Invalid name supplied
        404:
          description: Tag not found
  /images:
    get:
      tags:
        - image
      summary: Returns images
      operationId: getImageInventory
      produces:
        - application/json
        - application/xml
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Image'
        400:
          description: Invalid Request
  /image/findByTag:
    get:
      tags:
        - image
      summary: Finds Images by tag
      description: Muliple tags can be provided with comma separated strings.
      operationId: findImagesByTag
      produces:
        - application/json
        - application/xml
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Image'
        400:
          description: Invalid image value
  /image/srcSet/{name}:
    get:
      tags:
        - image
      summary: Finds Images by tag
      description: Muliple tags can be provided with comma separated strings.
      operationId: getSrcSet
      produces:
        - application/json
        - application/xml
      parameters:
        - name: name
          in: path
          description: tags to filter by
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Image'
        400:
          description: Invalid image value
definitions:
  Tag:
    type: object
    required:
      - name
      - images
      - author
      - date
    properties:
      images:
        type: array
        items:
          type: string
      name:
        type: string
      author:
        type: string
      notes:
        type: array
        items:
          $ref: '#/definitions/Note'
      date:
        type: string
        format: date
    xml:
      name: Tag
  ImageSelection:
    description: Selection of images with specific tags
    type: object
    required:
      - id
      - images
      - tags
      - date
    properties:
      tags:
        type: array
        items:
          type: string
      images:
        type: array
        items:
          type: string
      id:
        type: string
      title:
        type: string
      description:
        type: string
      author:
        type: string
      date:
        type: string
        format: date
    xml:
      name: ImageSelection
  Image:
    type: object
    required:
      - name
      - src
      - tags
    properties:
      name:
        type: string
      caption:
        type: string
      description:
        type: string
      tags:
        type: array
        items:
          type: string
      src:
        type: string
  Note:
    type: object
    required:
      - author
      - note
      - date
    properties:
      author:
        type: string
      note:
        type: string
      date:
        type: string
        format: date
    xml:
      name: Note
